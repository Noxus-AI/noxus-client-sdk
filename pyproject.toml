[project]
name = "noxus-sdk"
version = "0.1.0"
requires-python = ">=3.10"
dependencies = [
    "anyio",
    "pydantic>=2.0",
    "httpx",
    "aiofiles",
]

[build-system]
requires = ["setuptools>=64.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]

[project.optional-dependencies]
test = [
    "pytest>=8.3.3",
    "pytest-subtests==0.13.1",
    "pytest-asyncio==0.24.0",
    "pytest-cov>=6.0.0",
]
dev = [
    "hatch>=1.14.0",
    "mypy==1.11.2",
    "ruff==0.6.3",
    "flake8==7.1.1",
    "flake8-async==24.9.5",
    "typer==0.12.3",
    "textual>=2.1.0",
    "psutil>=7.0.0"
]

[tool.ruff]
line-length = 88

[tool.ruff.lint]
ignore = [
    "A",
    "B",
    "BLE001",
    "E401", "E402", "E722", "E731", "E741",
    "EM",
    "F401", "F541", "F403", "F811", "F841",
    "FBT",
    "I",
    "INP",
    "N818",
    "PT",
    "PLR",
    "PYI051",
    "RUF012", "RUF015",
    "S",
    "TID252",
    "TRY",
    "UP038",
]
exclude = ["tests/**"]

[tool.ruff.lint.per-file-ignores]
"examples/**" = ["T201"]


[tool.hatch.envs.test]
python = "3.10"
dependencies = [
  "pytest>=7.0.0",
  "pytest-asyncio>=0.21.0",
  "pytest-cov>=4.1.0",
  "pytest-mock>=3.10.0",
]

[tool.hatch.envs.test.scripts]
test = "pytest {args}"
test-cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml {args}"

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError", 
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "pass",
    "raise ImportError"
]